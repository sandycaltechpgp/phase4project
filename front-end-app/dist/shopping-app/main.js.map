{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/admin/admin.component.css","webpack:///./src/app/Components/admin/admin.component.html","webpack:///./src/app/Components/admin/admin.component.ts","webpack:///./src/app/Components/admin/cp/cp.component.css","webpack:///./src/app/Components/admin/cp/cp.component.html","webpack:///./src/app/Components/admin/cp/cp.component.ts","webpack:///./src/app/Components/admin/edit-item/edit-item.component.css","webpack:///./src/app/Components/admin/edit-item/edit-item.component.html","webpack:///./src/app/Components/admin/edit-item/edit-item.component.ts","webpack:///./src/app/Components/admin/order-item/order-item.component.css","webpack:///./src/app/Components/admin/order-item/order-item.component.html","webpack:///./src/app/Components/admin/order-item/order-item.component.ts","webpack:///./src/app/Components/home/address/address.component.css","webpack:///./src/app/Components/home/address/address.component.html","webpack:///./src/app/Components/home/address/address.component.ts","webpack:///./src/app/Components/home/cart-item/cart-item.component.css","webpack:///./src/app/Components/home/cart-item/cart-item.component.html","webpack:///./src/app/Components/home/cart-item/cart-item.component.ts","webpack:///./src/app/Components/home/home.component.css","webpack:///./src/app/Components/home/home.component.html","webpack:///./src/app/Components/home/home.component.ts","webpack:///./src/app/Components/home/product/product.component.css","webpack:///./src/app/Components/home/product/product.component.html","webpack:///./src/app/Components/home/product/product.component.ts","webpack:///./src/app/Components/login/login.component.css","webpack:///./src/app/Components/login/login.component.html","webpack:///./src/app/Components/login/login.component.ts","webpack:///./src/app/Components/navigation/navigation.component.css","webpack:///./src/app/Components/navigation/navigation.component.html","webpack:///./src/app/Components/navigation/navigation.component.ts","webpack:///./src/app/Components/register/register.component.css","webpack:///./src/app/Components/register/register.component.html","webpack:///./src/app/Components/register/register.component.ts","webpack:///./src/app/Service/AuthInterceptor.ts","webpack:///./src/app/Service/api.service.ts","webpack:///./src/app/Service/authguard.guard.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".card-text{\\r\\n    height: 50px;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n.mybtn{\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n.mybtnclr{\\r\\n    margin-left:10px;\\r\\n}\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                        <button class=\\\"mybtn btn btn-secondary\\\" (click)=\\\"show()\\\" *ngIf=\\\"!showAdd\\\">Click to Add</button>\\n                        <button class=\\\"mybtn btn btn-secondary\\\" (click)=\\\"hide()\\\" *ngIf=\\\"showAdd\\\">Click to hide</button>\\n                </div>\\n        </div>\\n        <form class=\\\"form-horizontal shadow p-3 mb-5 bg-white rounded \\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && addProd(desc,quan,price,prodname,image)\\\"\\n                *ngIf=\\\"showAdd\\\">\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Product Name\\\" #prodname\\n                                                ngModel name=\\\"prodname\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <textarea type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"description\\\" name=\\\"desc\\\"\\n                                                #desc ngModel rows=\\\"5\\\"></textarea>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"quantity\\\" name=\\\"quan\\\" #quan\\n                                                ngModel>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"price\\\" name=\\\"price\\\" #price\\n                                                ngModel>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"file\\\" class=\\\"form-control\\\" placeholder=\\\"Product Picture\\\" #image\\n                                                accept=\\\"image/*\\\" name=\\\"image\\\"\\n                                                (change)=\\\"handleFileInput($event.target.files)\\\">\\n                                </div>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                                <h4 class=\\\"text-center\\\">Image preview</h4>\\n                                <img [src]=\\\"imageUrl\\\" style=\\\"width:400px;height: 300px;\\\">\\n\\n                        </div>\\n                        \\n                </div>\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                                <input type=\\\"submit\\\" class=\\\" btn btn-primary\\\" value=\\\"Add Product\\\">\\n                        </div>\\n                </div>\\n        </form>\\n        <hr>\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-3 align-left\\\" *ngFor=\\\"let product of products\\\">\\n                        <div class=\\\"card shadow p-3 mb-5 bg-white rounded\\\">\\n                                <div class=\\\"card-body\\\">\\n                                        <h5 class=\\\"card-title\\\">{{product.productname}}</h5>\\n                                        <img src=\\\"data:image/png;base64,{{product.productimage}}\\\" class=\\\"img-responsive\\\"\\n                                                height=\\\"150px\\\" width=\\\"200px\\\" alt=\\\"Image\\\">\\n                                        <p class=\\\"card-text\\\"> {{product.description}}</p>\\n                                        <input type=\\\"hidden\\\" value={{product.productid}} #prdid>\\n                                        <div class=\\\"row\\\">\\n                                                <div class=\\\"col-6\\\">\\n                                                        <button class=\\\"btn btn-secondary\\\" (click)=\\\"edit(prdid)\\\">Edit</button>\\n                                                </div>\\n                                                <div class=\\\"col-6\\\">\\n                                                        <button class=\\\"btn btn-danger\\\"\\n                                                                (click)=\\\"delProd(prdid)\\\">Remove</button>\\n                                                </div>\\n                                        </div>\\n                                </div>\\n                        </div>\\n                </div>\\n        </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Product } from 'src/app/Model/product';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Route } from '@angular/compiler/src/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  products: Product[] = [];\n  fileToUpload: File = null;\n  showAdd = false;\n  auth: string;\n  constructor(private api: ApiService, private router: Router) { }\n  imageUrl: string = \"/assets/img/noimage.png\";\n  ngOnInit() {\n    if (this.api.isAuthenticated) {\n      this.auth = this.api.getToken();\n      this.api.getProducts().subscribe(\n        res => {\n          this.products = res.oblist;\n        }\n      );\n    }\n  }\n  handleFileInput(file: FileList) {\n    this.fileToUpload = file.item(0);\n    var reader = new FileReader();\n    reader.onload = (event: any) => {\n      this.imageUrl = event.target.result;\n    }\n    reader.readAsDataURL(this.fileToUpload);\n  }\n  show() {\n    this.showAdd = true;\n  }\n  hide() {\n    this.showAdd = false;\n  }\n  addProd(desc:any, quan:any, price:any, prodname:any, image:any) {\n    this.api.addProduct(desc.value, quan.value, price.value, prodname.value, this.fileToUpload).subscribe(res => {\n      this.products = res.oblist;\n    });\n  }\n  delProd(prodid:any) {\n\n    this.api.deleteProduct(prodid.value).subscribe(res => {\n      this.products = res.oblist;\n      this.ngOnInit();\n    });\n    \n  }\n  edit(prodid:any) {\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        \"user\": prodid.value\n      }\n    };\n    this.router.navigate([\"admin/edit\"], navigationExtras);\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<script>\\n\\n</script>\\n<div class=\\\"container \\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"offset-2 col-6 \\\">\\n            <form class=\\\"form-horizontal shadow p-3 mb-5 bg-white rounded\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"changePassword()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"cp\\\">Change Password: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"model.oldPassword\\\"\\n                            placeholder=\\\"Old Password\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"city\\\">City: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"model.newPassword\\\"\\n                            placeholder=\\\"New Password\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"state\\\">State: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"rnewPassword\\\" [(ngModel)]=\\\"model.rnewPassword\\\"\\n                            placeholder=\\\"Retype New Password\\\" />\\n                    </div>\\n                </div>\\n\\n                <br />\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-m-offset-2 col-m-4\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn  btn-primary\\\" name=\\\"cp\\\">\\n                            Change Password\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Address } from 'src/app/Model/address';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Router } from '@angular/router';\nimport { ChangePassword } from 'src/app/Model/changePassword';\n\n\n@Component({\n  selector: 'app-cp',\n  templateUrl: './cp.component.html',\n  styleUrls: ['./cp.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  private cpForm: any;\n  model: ChangePassword = {\n    oldPassword: '',\n    newPassword: '',\n    rnewPassword: ''\n  };\n  constructor(private api: ApiService, private route: Router) { }\n\n  ngOnInit() {\n    this.api.getAddress().subscribe(res => {\n      if (res.map != null) {\n        this.model = res.map;\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  changePassword() {\n    if(this.model.newPassword != this.model.rnewPassword){\n      alert(\"New Passwords doesnt match \")\n      return \n    }\n\n    this.api.changePassword(this.model).subscribe(res => {\n      console.log(res);\n      this.route.navigate(['/home']);\n    });\n  }\n\n  \n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n        <br>\\n        <form class=\\\"form-horizontal shadow p-3 mb-5 bg-white rounded\\\" #f=\\\"ngForm\\\"\\n                (ngSubmit)=\\\"f.form.valid && updateProd(desc,quan,price,prodname,image)\\\">\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Product Name\\\" #prodname\\n                                                ngModel name=\\\"prodname\\\" [(ngModel)]=\\\"product.productname\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <textarea type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"description\\\" name=\\\"desc\\\"\\n                                                #desc ngModel [(ngModel)]=\\\"product.description\\\" rows=\\\"5\\\"></textarea>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"quantity\\\" name=\\\"quan\\\" #quan\\n                                                ngModel [(ngModel)]=\\\"product.quantity\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"price\\\" name=\\\"price\\\" #price\\n                                                ngModel [(ngModel)]=\\\"product.price\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                        <input type=\\\"file\\\" class=\\\"form-control\\\" placeholder=\\\"Product Picture\\\" #image\\n                                                accept=\\\"image/*\\\" name=\\\"image\\\"\\n                                                (change)=\\\"handleFileInput($event.target.files)\\\">\\n                                </div>\\n                        </div>\\n                        <div class=\\\"col-3\\\">\\n                                <p><b>Original Image</b></p>\\n                                <img src=\\\"data:image/png;base64,{{product.productimage}}\\\"\\n                                        style=\\\"width:70%;height: 60%;\\\">\\n\\n                        </div>\\n                        <div class=\\\"col-3\\\">\\n                                <p><b>New Image</b></p>\\n                                <img [src]=\\\"imageUrl\\\" style=\\\"width:250px;height: 200px;\\\">\\n\\n                        </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                                <input type=\\\"submit\\\" class=\\\" btn btn-secondary\\\" value=\\\"Update Product\\\">\\n                        </div>\\n                </div>\\n        </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Product } from 'src/app/Model/product';\nimport { ApiService } from 'src/app/Service/api.service';\n\n@Component({\n  selector: 'app-edit-item',\n  templateUrl: './edit-item.component.html',\n  styleUrls: ['./edit-item.component.css']\n})\nexport class EditItemComponent implements OnInit {\n\n  product: Product = {\n    productid: 0,\n    description: '',\n    price: 0,\n    productname: '',\n    quantity: 0,\n    productimage: null\n  };\n  products: Product[] = [];\n  fileToUpload: File = null;\n  auth: string;\n  prodid: string;\n  imageUrl: string = \"/assets/img/noimage.png\";\n\n  constructor(private route: ActivatedRoute, private api: ApiService) {\n    if (this.api.isAuthenticated) {\n      this.auth = this.api.getToken();\n      this.api.getProducts().subscribe(\n        res => {\n          res.oblist.forEach(pro => {\n            if (pro.productid == this.prodid) {\n              this.product = pro;\n              this.fileToUpload = pro.productimage;\n            }\n          });\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.prodid = params[\"user\"];\n    });\n  }\n\n  handleFileInput(file: FileList) {\n    this.fileToUpload = file.item(0);\n    var reader = new FileReader();\n    reader.onload = (event: any) => {\n      this.imageUrl = event.target.result;\n    }\n    reader.readAsDataURL(this.fileToUpload);\n  }\n\n  updateProd(desc:any, quan:any, price:any, prodname:any, image:any) {\n    console.log(this.product.productid)\n    this.api.updateProduct(desc.value, quan.value, price.value, prodname.value, this.fileToUpload, this.product.productid).subscribe(res => {\n      console.log(res);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6 align-left\\\" *ngFor=\\\"let order of orderlist\\\">\\n            <div class=\\\"card shadow p-3 mb-5 bg-white rounded\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                            <p class=\\\"card-title\\\"><b>Order By:</b> {{order.orderBy}}</p>\\n                            <p class=\\\"card-text\\\"><b>Status:</b> {{order.orderStatus}}</p>\\n                        </div>\\n\\n                        <div class=\\\"col-6\\\">\\n                            <button class=\\\"btn btn-secondary\\\" (click)=\\\"approve(order.orderId)\\\">Approve</button>\\n                            <button style=\\\"margin-left: 10px;\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"decline(order.orderId)\\\">Decline</button>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    <h5>Order Details</h5>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\" *ngFor=\\\"let buf of order.products\\\">\\n                            <p class=\\\"card-title\\\"> {{buf.productname}}</p>\\n                            <p class=\\\"card-text\\\"> Price : {{buf.price  | currency:'USD'}}</p>\\n                            <p class=\\\"card-text\\\">Quantity: {{buf.quantity}}</p>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/Service/api.service';\n\n@Component({\n  selector: 'order-item',\n  templateUrl: './order-item.component.html',\n  styleUrls: ['./order-item.component.css']\n})\nexport class OrderItemComponent implements OnInit {\n\n  auth: string;\n  orderlist: any[] = [];\n  constructor(private route: Router, private api: ApiService) { }\n\n  ngOnInit() {\n    this.auth = this.api.getToken();\n    this.getOrderList();\n  }\n\n  approve(orderid:any) {\n    let order = {\n      \"orderId\": orderid,\n      \"orderStatus\": \"Approved\"\n    }\n    this.api.updateStatusForOrder( order).subscribe(res => {\n      this.getOrderList();\n    });\n  }\n\n  decline(orderid:any) {\n    let order = {\n      \"orderId\": orderid,\n      \"orderStatus\": \"Declined\"\n    }\n    this.api.updateStatusForOrder(order).subscribe(res => {\n      this.getOrderList();\n    });\n  }\n\n  getOrderList() {\n    this.api.getOrders().subscribe(res => {\n      this.orderlist = res.orderlist;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container \\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"offset-2 col-6 \\\">\\n            <form class=\\\"form-horizontal shadow p-3 mb-5 bg-white rounded\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\" addOrUpdateAddress()\\\" novalidate>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"address\\\">Address: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"model.address\\\" placeholder=\\\"Address\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"city\\\">City: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"model.city\\\" placeholder=\\\"Atlanta\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"state\\\">State: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)]=\\\"model.state\\\" placeholder=\\\"Georgia\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label col-m-10\\\" for=\\\"country\\\">Country: </label>\\n                        <div class=\\\"col-m-10\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"model.country\\\" placeholder=\\\"US\\\"/>\\n                        </div>\\n                    </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"zipcode\\\">Zipcode: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"text\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"zipcode\\\" [(ngModel)]=\\\"model.zipcode\\\" placeholder=\\\"22222\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label col-m-10\\\" for=\\\"phone\\\">Phone Number: </label>\\n                    <div class=\\\"col-m-10\\\">\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"phone\\\" [(ngModel)]=\\\"model.phonenumber\\\" placeholder=\\\"+12342223456\\\"/>\\n                    </div>\\n                </div>\\n                <br />\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-m-offset-2 col-m-4\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn  btn-primary\\\" name=\\\"signup\\\">\\n                            Update\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Address } from 'src/app/Model/address';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.css']\n})\nexport class AddressComponent implements OnInit {\n\n  private addressForm: any;\n  model: Address = {\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    zipcode: '',\n    phonenumber: ''\n\n  };\n  constructor(private api: ApiService, private route: Router) { }\n\n  ngOnInit() {\n    this.api.getAddress().subscribe(res => {\n      if (res.map != null) {\n        this.model = res.map;\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  addOrUpdateAddress() {\n    this.api.addOrUpdateAddress(this.model).subscribe(res => {\n      console.log(res);\n      this.route.navigate(['/home']);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n  <br>\\n  <a routerLink=\\\"/home\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-angle-left\\\"></i> Continue Shopping</a><br>\\n  <p style=\\\"padding-top: 10px\\\"> To change Quantity, Edit Quantity and Click on Update button</p>\\n  <table id=\\\"cart\\\" class=\\\"table table-hover table-condensed table-borderless\\\">\\n    <thead>\\n      <tr>\\n        <th>Product</th>\\n        <th>Price</th>\\n        <th>Quantity</th>\\n        <th>Subtotal</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let cart of cartlist\\\">\\n      <td>\\n        {{cart.productname}}\\n      </td>\\n      <td>{{cart.price | currency:'USD'}}</td>\\n      <td>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <input type=\\\"number\\\" value=\\\"{{cart.quantity}}\\\" #quant>\\n            <input type=\\\"hidden\\\" value=\\\"{{cart.bufcartId}}\\\" #prod>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"updateCart(prod,quant)\\\">Update</button>\\n          </div>\\n        </div>\\n      </td>\\n      <td>\\n        {{cart.quantity*cart.price | currency:'USD'}}\\n\\n      </td>\\n      <td>\\n        <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"deleteItem(prod)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </table>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-9\\\">Total Sum : {{totalSum | currency:'USD'}}</div>\\n    <div class=\\\"offset-1 col-2\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary align-right\\\" (click)=\\\"placeOrder()\\\">Checkout <i\\n          class=\\\"fa fa-angle-right\\\"></i></button></div>\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Cart } from 'src/app/Model/cart';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart-item',\n  templateUrl: './cart-item.component.html',\n  styleUrls: ['./cart-item.component.css']\n})\nexport class CartItemComponent implements OnInit {\n\n  private auth: string;\n  cartlist: Cart[];\n  totalSum: number = 0;\n  constructor(private api: ApiService, private route: Router) {\n\n  }\n\n  ngOnInit() {\n    this.api.getCartItems().subscribe(res => {\n      this.cartlist = res.oblist;\n      this.cartlist.forEach(value => {\n        this.totalSum = this.totalSum + (value.quantity * value.price);\n      });\n    });\n\n  }\n  updateCart(id:any, quantity:any) {\n    this.api.updateCartItem(id.value, quantity.value).subscribe(res => {\n      this.cartlist = res.oblist;\n      this.cartlist.forEach(value => {\n        this.totalSum = this.totalSum + (value.quantity * value.price);\n      });\n    });\n  }\n  deleteItem(id:any) {\n    this.api.deleteCartItem(id.value).subscribe(res => {\n      this.cartlist = res.oblist;\n      this.cartlist.forEach(value => {\n        this.totalSum = this.totalSum + (value.quantity * value.price);\n      });\n    });\n  }\n\n  placeOrder() {\n    this.api.placeOrder().subscribe(res => {\n      console.log(res);\n    });\n    this.route.navigate(['/home']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\r\\n<div class=\\\"container\\\">\\r\\n  <br>\\r\\n\\r\\n  <div>\\r\\n    <input type=\\\"text\\\" name=\\\"search\\\" id=\\\"search\\\" > Search</input>\\r\\n    <input type=\\\"buttom\\\" onSubmit='getSearchResults(document.getElementById(\\\"search\\\"))' > Search <input>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-3 align-left\\\" *ngFor=\\\"let product of products\\\">\\r\\n      <app-product [product]=\\\"product\\\" (productAddToCart)=\\\"addToCart($event)\\\">Loading...</app-product>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Product } from 'src/app/Model/product';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  products: Product[] = [];\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    if (this.api.isAuthenticated) {\n      this.api.getProducts().subscribe(\n        res => {\n          this.products = res.oblist;\n        }\n      );\n    }\n  }\n\n  getSearchResults(s:String) {\n    if (this.api.isAuthenticated) {\n      this.api.getSearchProducts(s).subscribe(\n        res => {\n          this.products = res.oblist;\n        }\n      );\n    }\n  }\n\n  addToCart(e) {\n    this.api.addToCart(e).subscribe(res => {\n      console.log(res);\n    })\n  }\n}\n","module.exports = \".myproduct {\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 20px;\\r\\n  background-color: rgb(205, 210, 212);\\r\\n}\\r\\n.card-text{\\r\\n  height: 50px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{product.productname}}</h5>\\n                <img src=\\\"data:image/png;base64,{{product.productimage}}\\\" class=\\\"img-responsive\\\" height=\\\"150px\\\"\\n                        width=\\\"200px\\\" alt=\\\"Image\\\">\\n                <p class=\\\"card-text \\\"> {{product.description}}</p>\\n                <button class=\\\"btn btn-primary\\\" style=\\\"text-align: right\\\" (click)=\\\"addToCart()\\\">Add to cart</button>\\n        </div>\\n</div>\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from 'src/app/Model/product';\nimport { EventEmitter } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  @Input() public product;\n\n  @Output() productAddToCart: EventEmitter<Product> = new EventEmitter<Product>();\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n\n  }\n\n  addToCart() {\n    this.productAddToCart.emit(this.product);\n  }\n\n}\n","module.exports = \".login{\\r\\n    background-image:  url(/assets/img/login.png);\\r\\n}\\r\\n.card{\\r\\n    height: 200px;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 15px;\\r\\n}\"","module.exports = \"<app-navigation></app-navigation>\\r\\n<div class=\\\"container \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"offset-2 col-6\\\">\\r\\n            <div class=\\\"card login shadow p-3 mb-5 bg-white rounded \\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n                                <div *ngIf=\\\"error\\\">Content to render when condition is true.</div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"xyz@gmail.com\\\" style=\\\"width:50%\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\" style=\\\"width:50%\\\">\\r\\n                                </div>\\r\\n                                <input type=\\\"submit\\\" class=\\\"btn btn-secondary align-right\\\" value=\\\"Login\\\">\\r\\n                            </form>\\r\\n                    </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private loginForm: any;\n  error = false;\n  constructor(private apiService: ApiService,\n    private router: Router,\n    private formBuilder: FormBuilder) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n  createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  login(): void {\n    this.apiService.login(this.loginForm.value).\n      subscribe(res => {\n        if (res.status == \"200\" && res.userType == \"CUSTOMER\") {\n          this.apiService.storeToken(res.authToken, \"customer\");\n          this.router.navigate(['/home']);\n          this.error = false;\n        } else if (res.status == \"200\" && res.userType == \"ADMIN\") {\n          this.apiService.storeToken(res.authToken, \"admin\");\n          this.router.navigate(['/admin']);\n          this.error = false;\n        }\n      },\n        err => {\n          this.router.navigate(['/login']);\n      });\n  }\n}\n","module.exports = \".navbar {\\r\\n  border-radius: 0;\\r\\n}\\r\\n.log {\\r\\n  text-align: right;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo01\\\"\\n      aria-controls=\\\"navbarTogglerDemo01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\" [ngSwitch]=\\\"loggedType\\\">\\n      <div *ngSwitchCase=\\\"'home'\\\">\\n        <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"ml-auto\\\" *ngSwitchCase=\\\"'customer'\\\">\\n        <ul class=\\\"navbar-nav ml-auto mt-2 mt-lg-0\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/home\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/home/address\\\">Address</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/home/cart\\\">Cart</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/admin/cp\\\">ChangePassword</a>\\n          </li>\\n          \\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link \\\" (click)=\\\"logout()\\\" style=\\\"cursor: pointer; float: right;\\\">Log out</a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"ml-auto\\\" *ngSwitchCase=\\\"'admin'\\\">\\n        <ul class=\\\"navbar-nav mt-2 mt-lg-0 \\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/admin\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/admin/order\\\">Orders</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" routerLink=\\\"/admin/cp\\\">ChangePassword</a>\\n          </li>\\n          \\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\" nav-link\\\" (click)=\\\"logout()\\\" style=\\\"cursor: pointer;\\\">Log out</a>\\n          </li>\\n          \\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n  private loggedType: string;\n  constructor(private auth: ApiService, private route: Router) {\n\n    if (this.auth.getAuthType() == null) {\n      this.loggedType = \"home\";\n    } else {\n      if (this.auth.getAuthType() == \"customer\") {\n        this.loggedType = \"customer\";\n      } else if (this.auth.getAuthType() == \"admin\") {\n        this.loggedType = \"admin\";\n      }\n    }\n  }\n\n  ngOnInit() {\n    //console.log(this.auth.getAuthType());\n\n  }\n  logout() {\n    this.loggedType = \"home\";\n    this.auth.removeToken();\n    this.auth.logout();\n    this.route.navigate(['/login']);\n  }\n\n}\n","module.exports = \".invalid-input {\\r\\n  color: red;\\r\\n}\\r\\n.login{\\r\\n  background-image:  url(/assets/img/login.png);\\r\\n}\\r\\n.row{\\r\\n  margin-top: 15px;\\r\\n}\"","module.exports = \"<app-navigation></app-navigation>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"offset-2 col-6\\\">\\n            <div class=\\\"card login shadow p-3 mb-5 bg-white rounded \\\">\\n                <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"xyz@gmail.com\\\"\\n                                style=\\\"width:50%\\\" required>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\"\\n                                style=\\\"width:50%\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\"\\n                                placeholder=\\\"Password\\\" style=\\\"width:50%\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"age\\\" placeholder=\\\"Age\\\"\\n                                style=\\\"width:50%\\\">\\n                        </div>\\n                        <div>\\n                            <select name=\\\"usertype\\\" id=\\\"usertype\\\" formControlName=\\\"usertype\\\">\\n                                <option value=\\\"ADMIN\\\">ADMIN</option>\\n                                <option value=\\\"USER\\\">USER</option>\\n                              </select>\\n                        </div>\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-secondary align-right\\\" value=\\\"Register\\\">\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/Service/api.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  private registerForm: any;\n  constructor(private apiService: ApiService,\n    private router: Router,\n    private formBuilder: FormBuilder) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n  createForm() {\n    this.registerForm = this.formBuilder.group({\n      email: '',\n      password: '',\n      username: '',\n      age: '',\n      usertype: 'customer'\n    });\n  }\n  register(): void {\n\n    this.apiService.register(this.registerForm.value).\n      subscribe(res => {\n        if (res.status == \"400\") {\n          console.log(\"Details cannot be empty\");\n        } else {\n          this.router.navigate(['/login']);\n        }\n      },\n        err => {\n          alert(\"An error has occured, Please try again !!!\");\n        });\n  }\n}\n\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { CATCH_ERROR_VAR } from '@angular/compiler/src/output/output_ast';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from 'src/app/Service/api.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private api: ApiService) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n      if(this.api.getToken()!=null){\r\n        const authReq = req.clone({\r\n            headers: req.headers.set('Authorization', `Bearer ${this.api.getToken()}`)\r\n          });\r\n\r\n          return next.handle(authReq);\r\n      } else{\r\n        return next.handle(req);\r\n      }      \r\n  }\r\n}","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../Model/product';\nimport { User } from '../Model/user';\nimport { SESSION_STORAGE, StorageService } from 'angular-webstorage-service';\nimport { Address } from '../Model/address';\nimport { environment } from 'src/environments/environment';\nimport { ChangePassword } from '../Model/changePassword';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  constructor(@Inject(SESSION_STORAGE) private storage: StorageService, private http: HttpClient) {\n\n  }\n  // Registering new users to the system\n  register(user: User): Observable<any> {\n    return this.http.post(environment.baseUrl+environment.signupUrl,\n      JSON.stringify(user),\n      {\n        headers:\n          { 'Content-Type': 'application/json' }\n      });\n  }\n  // validating user credentials\n  login(user: User): Observable<any> {\n    return this.http.post(environment.baseUrl+environment.loginUrl,\n      JSON.stringify(user),\n      {\n        headers:\n          { 'Content-Type': 'application/json' }\n      });\n  }\n\n  logout(){\n    this.http.get<any>(environment.baseUrl+environment.logoutUrl);\n  }\n\n  // Add Products to the Cart\n  addToCart(product: Product ): Observable<any> {\n    return this.http.get<any>(environment.baseUrl+environment.addToCartUrl +\"?productId=\"+product.productid);\n  }\n\n  // View Cart items\n  getCartItems(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl+environment.viewCartUrl);\n  }\n\n  // update items quantity in the cart\n  updateCartItem(prodid: number, quant: number): Observable<any> {\n    var map = {\n      \"id\":prodid,\n      \"quantity\":quant\n    }\n    return this.http.put<any>(environment.baseUrl+environment.updateCartUrl, map);\n  }\n\n  // delete cart Item \n  deleteCartItem(bufdid: number): Observable<any> {\n    return this.http.delete<any>(environment.baseUrl+environment.deleteCartUrl + \"?bufcartid=\" + bufdid);\n  }\n\n  // update Address \n  addOrUpdateAddress(adr: Address): Observable<any> {\n    return this.http.post<any>(environment.baseUrl+environment.addAddressUrl, adr);\n  }\n\n\n  // update Address \n  changePassword(adr: ChangePassword): Observable<any> {\n    return this.http.post<any>(environment.baseUrl+environment.changeCPUrl, adr);\n  }\n\n  // fetch address \n  getAddress(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl+environment.viewAddressUrl);\n  }\n\n   // Fetching all the products\n   getProducts(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl+environment.productsUrl);\n  }\n\n   // Fetching all the search products\n   getSearchProducts(s:String): Observable<any> {\n    return this.http.get<any>(environment.baseUrl+environment.sproductsUrl+'?search='+s);\n  }\n\n\n  // Add product in the system\n  addProduct( desc: string,\n    quan: string, price: string, prodname: string, image: File): Observable<any> {\n    const formData: FormData = new FormData();\n    formData.append(\"description\", desc);\n    formData.append(\"price\", price);\n    formData.append(\"productname\", prodname);\n    formData.append(\"quantity\", quan);\n    formData.append(\"file\", image);\n    return this.http.post<any>(environment.baseUrl+environment.addProductUrl, formData);\n\n  }\n  \n  // update Product for Logged Admin User\n  updateProduct( desc: string,\n    quan: string, price: string, prodname: string, image: File, productid: any): Observable<any> {\n    const formData: FormData = new FormData();\n    formData.append(\"description\", desc);\n    formData.append(\"price\", price);\n    formData.append(\"productname\", prodname);\n    formData.append(\"quantity\", quan);\n    formData.append(\"file\", image);\n    formData.append(\"productId\", productid);\n    return this.http.put<any>(environment.baseUrl+environment.updateProductUrl, formData);\n  }\n\n  // delete Product\n  deleteProduct( prodid: number) {\n    return this.http.delete<any>(environment.baseUrl+environment.deleteProductUrl + \"?productId=\" + prodid);\n  }\n\n  // fetch available orders placed\n  getOrders() {\n    return this.http.get<any>(environment.baseUrl+environment.viewOrderUrl)\n  }\n\n   // place the order \n   placeOrder(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl+environment.placeOrderUrl);\n  }\n\n  // update status for order\n  updateStatusForOrder( order: any) {\n    const formData: FormData = new FormData();\n    formData.append(\"orderId\", order.orderId);\n    formData.append(\"orderStatus\", order.orderStatus);\n    return this.http.post<any>(environment.baseUrl+environment.updateOrderUrl, formData)\n  }\n\n  // Authentication Methods \n\n  isAuthenticated(): boolean {\n    return this.getToken() !== null;\n  }\n\n  storeToken(token: string, auth_type: string) {\n    this.storage.set(\"auth_token\", token);\n    this.storage.set(\"auth_type\", auth_type);\n  }\n\n  getAuthType(): string {\n    if (this.storage.get(\"auth_type\") !== null) {\n      return this.storage.get(\"auth_type\");\n    }\n    return null;\n  }\n\n  getToken() {\n    return this.storage.get(\"auth_token\");\n  }\n\n  removeToken() {\n    this.storage.remove(\"auth_type\");\n    return this.storage.remove(\"auth_token\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n\n  constructor(private auth: ApiService, private router: Router) {\n  }\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","module.exports = \".jumbotron {\\r\\n  margin-bottom: 0;\\r\\n  background-color: rgb(98, 189, 224);\\r\\n}\\r\\n\\r\\n.head-title {\\r\\n  margin-bottom: 30px;\\r\\n  color: white;\\r\\n  background-color: rgb(25, 122, 160);\\r\\n  font-family: \\\"Mansalva\\\", cursive;\\r\\n}\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container head-title\\\">\\n        <h4 class=\\\"display-4 text-center\\\">Kitchen Story</h4>\\n        \\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './Service/api.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private auth: ApiService, private router: Router) {\n\n  }\n  ngOnInit() {\n      if (this.auth.isAuthenticated()!=null && this.auth.getAuthType() == \"customer\") {\n        this.router.navigate([\"/home\"]);\n      } else if (this.auth.isAuthenticated()!=null && this.auth.getAuthType() == \"admin\") {\n        this.router.navigate([\"/admin\"]);\n      } else {\n        this.router.navigate([\"/login\"]);\n      }\n   \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport {StorageServiceModule} from 'angular-webstorage-service';\nimport {Router, Routes, RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { NavigationComponent } from './Components/navigation/navigation.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { AuthguardGuard } from './Service/authguard.guard';\nimport { AdminComponent } from './Components/admin/admin.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProductComponent } from './Components/home/product/product.component';\nimport { CartItemComponent } from './Components/home/cart-item/cart-item.component';\nimport { AddressComponent } from './Components/home/address/address.component';\nimport { EditItemComponent } from './Components/admin/edit-item/edit-item.component';\nimport { OrderItemComponent } from './Components/admin/order-item/order-item.component';\nimport { AuthInterceptor } from './Service/AuthInterceptor';\nimport {ChangePasswordComponent} from './Components/admin/cp/cp.component'\nconst appRoutes:Routes=[\n  { path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n{\n  path:'login',\n  component: LoginComponent\n},\n{\n  path:'register',\n  component: RegisterComponent\n},\n{\n  path:'admin',\n  component: AdminComponent\n}\n,\n{\n  path:'home',\n  component: HomeComponent,\n  canActivate:[AuthguardGuard]\n},\n{\n  path:'home/cart',\n  component: CartItemComponent,\n  canActivate:[AuthguardGuard]\n},\n{\n  path:'home/address',\n  component: AddressComponent,\n  canActivate:[AuthguardGuard]\n},\n{\n  path:'admin/edit',\n  component: EditItemComponent,\n  canActivate:[AuthguardGuard]\n},\n{\n  path:'admin/order',\n  component: OrderItemComponent,\n  canActivate:[AuthguardGuard]\n},\n{\n  path:'admin/cp',\n  component: ChangePasswordComponent,\n  canActivate:[AuthguardGuard]\n}\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProductComponent,\n    HomeComponent,\n    CartItemComponent,\n    AddressComponent,\n    AdminComponent,\n    EditItemComponent,\n    OrderItemComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    HttpClientModule,\n    StorageServiceModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    NgbModule,\n    BrowserAnimationsModule\n  ],\n  providers: [{\n    provide : HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi   : true,\n  },],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:\"http://localhost:8087\",\n  signupUrl : \"/home/signup\",\n  loginUrl : \"/home/auth\",\n  addToCartUrl : \"/user/addToCart\",\n  viewCartUrl : \"/user/viewCart\",\n  updateCartUrl : \"/user/updateCart\",\n  deleteCartUrl: \"/user/delCart\",\n  addAddressUrl : \"/user/addAddress\",\n  viewAddressUrl : \"/user/getAddress\",\n  productsUrl : \"/user/getProducts\",\n  addProductUrl : \"/admin/addProduct\",\n  deleteProductUrl : \"/admin/delProduct\",\n  updateProductUrl : \"/admin/updateProducts\",\n  viewOrderUrl : \"/admin/viewOrders\",\n  updateOrderUrl : \"/admin/updateOrder\",\n  placeOrderUrl : \"/user/placeOrder\",\n  logoutUrl : \"/home/logout\",\n  changeCPUrl:\"/home/changePassword\",\n  sproductsUrl : \"/user/getSearchProducts\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error',  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}